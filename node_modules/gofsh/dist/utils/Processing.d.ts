import { fhirdefs } from 'fsh-sushi';
import { Package, FHIRProcessor, LakeOfFHIR, FHIRResource, FileImport } from '../processor';
import { ExportableConfiguration } from '../exportable';
export declare function getInputDir(input?: string): string;
export declare function ensureOutputDir(output?: string): string;
export declare function getFhirProcessor(inDir: string, defs: fhirdefs.FHIRDefinitions, fileType: string): FHIRProcessor;
export declare function getResources(processor: FHIRProcessor, config: ExportableConfiguration, options?: ProcessingOptions): Promise<Package>;
export declare function writeFSH(resources: Package, outDir: string, style: string): void;
export declare function loadExternalDependencies(defs: fhirdefs.FHIRDefinitions, dependencies?: string[]): Promise<fhirdefs.FHIRDefinitions | void>[];
export declare function getLakeOfFHIR(inDir: string, fileType: string): LakeOfFHIR;
export declare function readJSONorXML(file: string): FileImport;
export declare function isProcessableContent(content: any, source?: string): content is FHIRResource;
export declare function getIgPathFromIgIni(inDir: string): string;
export declare function getFilesRecursive(dir: string): string[];
export declare type ProcessingOptions = {
    indent?: boolean;
    metaProfile?: 'only-one' | 'first' | 'none';
    [key: string]: boolean | number | string;
};
