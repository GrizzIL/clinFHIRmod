import { fhirtypes, fshtypes, utils } from 'fsh-sushi';
import { ProcessableStructureDefinition, ProcessableElementDefinition } from '../processor';
export declare function getPath(element: fhirtypes.ElementDefinition): string;
export declare type FlatObject = {
    [key: string]: number | string | boolean;
};
export declare function getPathValuePairs(object: object): FlatObject;
export declare function getFSHValue(index: number, flatArray: [string, string | number | boolean][], resourceType: string, fisher: utils.Fishable): number | boolean | string | fshtypes.FshCode | bigint;
export declare function isFSHValueEmpty(fshValue: any): boolean;
export declare function getAncestorElement(id: string, structDef: ProcessableStructureDefinition, fisher: utils.Fishable): any;
export declare function getCardinality(id: string, structDef: ProcessableStructureDefinition, fisher: utils.Fishable): {
    min: number;
    max: string;
};
export declare function getAncestorSliceDefinition(element: ProcessableElementDefinition, sd: ProcessableStructureDefinition, fisher: utils.Fishable): any;
