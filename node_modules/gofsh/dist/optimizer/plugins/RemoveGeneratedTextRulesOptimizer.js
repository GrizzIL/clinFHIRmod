"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.hasGeneratedText = void 0;
const lodash_1 = require("lodash");
const exportable_1 = require("../../exportable");
const fsh_sushi_1 = require("fsh-sushi");
exports.default = {
    name: 'remove_generated_text_rules',
    description: 'Remove rules on "text" which represent generated content.',
    optimize(pkg) {
        [
            ...pkg.profiles,
            ...pkg.extensions,
            ...pkg.logicals,
            ...pkg.resources,
            ...pkg.valueSets,
            ...pkg.codeSystems
        ].forEach(resource => {
            if (hasGeneratedText(resource)) {
                lodash_1.remove(resource.rules, rule => rule instanceof exportable_1.ExportableCaretValueRule &&
                    rule.path === '' &&
                    rule.caretPath.match(/^text\./));
            }
        });
        [...pkg.instances].forEach(instance => {
            if (hasGeneratedText(instance)) {
                lodash_1.remove(instance.rules, rule => rule instanceof exportable_1.ExportableAssignmentRule && rule.path.match(/^text\./));
            }
        });
    }
};
function hasGeneratedText(resource) {
    if (resource instanceof exportable_1.ExportableInstance) {
        return resource.rules.some((rule) => rule instanceof exportable_1.ExportableAssignmentRule &&
            rule.path === 'text.status' &&
            rule.value instanceof fsh_sushi_1.fshtypes.FshCode &&
            ['generated', 'extensions'].includes(rule.value.code));
    }
    else {
        return resource.rules.some((rule) => rule instanceof exportable_1.ExportableCaretValueRule &&
            rule.path === '' &&
            rule.caretPath === 'text.status' &&
            rule.value instanceof fsh_sushi_1.fshtypes.FshCode &&
            ['generated', 'extensions'].includes(rule.value.code));
    }
}
exports.hasGeneratedText = hasGeneratedText;
//# sourceMappingURL=RemoveGeneratedTextRulesOptimizer.js.map