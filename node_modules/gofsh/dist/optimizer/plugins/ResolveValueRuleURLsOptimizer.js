"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fsh_sushi_1 = require("fsh-sushi");
const exportable_1 = require("../../exportable");
const utils_1 = require("../utils");
const CombineCodingAndQuantityValuesOptimizer_1 = __importDefault(require("./CombineCodingAndQuantityValuesOptimizer"));
exports.default = {
    name: 'resolve_value_rule_urls',
    description: 'Replace URLs in caret and assignment rules with their names or aliases',
    runAfter: [CombineCodingAndQuantityValuesOptimizer_1.default.name],
    optimize(pkg) {
        [
            ...pkg.instances,
            ...pkg.profiles,
            ...pkg.extensions,
            ...pkg.codeSystems,
            ...pkg.valueSets
        ].forEach(resource => {
            resource.rules.forEach((rule) => {
                var _a;
                if ((rule instanceof exportable_1.ExportableAssignmentRule || rule instanceof exportable_1.ExportableCaretValueRule) &&
                    rule.value instanceof fsh_sushi_1.fshtypes.FshCode) {
                    rule.value.system = (_a = utils_1.resolveAliasFromURL(rule.value.system, pkg.aliases)) !== null && _a !== void 0 ? _a : rule.value.system;
                }
            });
        });
    }
};
//# sourceMappingURL=ResolveValueRuleURLsOptimizer.js.map