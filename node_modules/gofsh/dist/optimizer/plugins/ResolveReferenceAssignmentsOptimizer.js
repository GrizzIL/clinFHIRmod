"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fsh_sushi_1 = require("fsh-sushi");
const exportable_1 = require("../../exportable");
const AddReferenceKeywordOptimizer_1 = __importDefault(require("./AddReferenceKeywordOptimizer"));
exports.default = {
    name: 'resolve_reference_assignments_optimizer',
    description: 'Resolves values in reference assignment rules if possible',
    runAfter: [AddReferenceKeywordOptimizer_1.default.name],
    optimize(pkg, fisher) {
        pkg.instances.forEach(instance => {
            instance.rules
                .filter(rule => rule instanceof exportable_1.ExportableAssignmentRule && rule.value instanceof fsh_sushi_1.fshtypes.FshReference)
                .forEach((rule) => {
                const reference = rule.value;
                const splitReference = reference.reference.split('/');
                if (splitReference.length === 2) {
                    const [resourceType, name] = splitReference;
                    const matchingInstances = pkg.instances.filter(i => {
                        var _a;
                        return (i.name === name &&
                            ((_a = fisher.fishForStructureDefinition(i.instanceOf)) === null || _a === void 0 ? void 0 : _a.type) === resourceType);
                    });
                    if (matchingInstances.length === 1) {
                        reference.reference = name;
                    }
                }
            });
        });
    }
};
//# sourceMappingURL=ResolveReferenceAssignmentsOptimizer.js.map