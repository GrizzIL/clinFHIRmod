import { fshtypes } from 'fsh-sushi';
import { ErrorsAndWarnings } from '../utils';
export declare function fhirToFsh(input: any[], options?: fhirToFshOptions): Promise<{
    fsh: string | fshMap;
    configuration: fshtypes.Configuration;
    errors: ErrorsAndWarnings['errors'];
    warnings: ErrorsAndWarnings['warnings'];
}>;
export declare type fshMap = {
    aliases: string;
    invariants: ResourceMap;
    mappings: ResourceMap;
    profiles: ResourceMap;
    extensions: ResourceMap;
    logicals: ResourceMap;
    resources: ResourceMap;
    codeSystems: ResourceMap;
    valueSets: ResourceMap;
    instances: ResourceMap;
};
export declare class ResourceMap extends Map<string, string> {
    toJSON(): Record<string, any>;
}
declare type fhirToFshOptions = {
    dependencies?: string[];
    logLevel?: Level;
    style?: exportStyle;
    indent?: boolean;
};
export declare type exportStyle = 'string' | 'map';
declare const levels: readonly ["silly", "debug", "verbose", "http", "info", "warn", "error", "silent"];
declare type Level = typeof levels[number];
export {};
